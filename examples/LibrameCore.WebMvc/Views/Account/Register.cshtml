@using LibrameCore.Authentication;
@model User
@{
    ViewData["Title"] = "Register";
}
<h2>User Register</h2>
<hr />

<div class="form-horizontal">
    @if (User.Identity.IsAuthenticated)
    {
        var identity = User.AsLibrameIdentity(Context.RequestServices);

        <h3>当前已登陆 @identity.Name</h3>
    }
    else
    {
        <form id="form1" asp-controller="Account" asp-action="RegisterAsync" method="post">
            <fieldset>
                <h3 class="col-sm-offset-1">User Info</h3>
            </fieldset>

            <div class="form-group">
                <label asp-for="Name" class="control-label col-sm-1">用户</label>
                <div class="col-sm-6">
                    <input asp-for="Name" class="xlarge" />
                    <span style="color:red;">*</span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Passwd" class="control-label col-sm-1">密码</label>
                <div class="col-sm-6">
                    <input asp-for="Passwd" class="xlarge" />
                    <span style="color:red;">*</span>
                </div>
            </div>

            <div class="form-group">
                <label for="RePasswd" class="control-label col-sm-1">重复密码</label>
                <div class="col-sm-6">
                    <input id="RePasswd" name="RePasswd" type="password" class="xlarge" />
                    <span style="color:red;">*</span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-1 col-sm-6">
                    <button type="submit" class="btn btn-default">注册</button>
                </div>
            </div>
        </form>
    }
</div>

@if (!User.Identity.IsAuthenticated)
{
    @section Scripts {
        <script type="text/javascript">
        var isValidated = false;

        function displayMessage($span, hasError, message) {
            if (hasError) {
                $span.css("color", "red");
            } else {
                $span.css("color", "green");
            }

            $span.html(message);
        }

        function validateUniqueness(obj, minLength, maxLength) {
            var $obj = $(obj);
            var length = $obj.val().length;

            isValidated = false;

            if (length < minLength || length > maxLength) {
                displayMessage($obj.next(), true, "长度控制在" + minLength + "~" + maxLength + "位");
                return isValidated;
            }

            $.ajax({
                url: '@Url.Action("ValidateRegister")',
                data: { field: $obj.attr('name'), value: $obj.val() },
                success: function (result) {
                    // true 表示未被使用
                    if (result) {
                        isValidated = true;
                        displayMessage($obj.next(), false, "可用");
                    } else {
                        displayMessage($obj.next(), true, "不可用");
                    }
                }
            });

            return isValidated;
        }

        $('#Name').focusout(function () {
            validateUniqueness(this, 5, 50);
        });

        $('#Passwd').focusout(function () {
            var $obj = $(this);
            var length = $obj.val().length;

            isValidated = false;

            if (length < 6 || length > 16) {
                displayMessage($obj.next(), true, "长度控制在6~16位");
            } else {
                isValidated = true;
                displayMessage($obj.next(), false, "有效");
            }
        });

        $('#RePasswd').focusout(function () {
            var $obj = $(this);
            var $passwd = $("#Passwd");
            var passwdValue = $passwd.val();

            isValidated = false;

            if (passwdValue.length < 1) {
                displayMessage($obj.next(), true, "长度控制在6~16位");
            } else if ($obj.val() != passwdValue) {
                displayMessage($obj.next(), true, "两次密码不一致");
            } else {
                isValidated = true;
                displayMessage($obj.next(), false, "有效");
            }
        });

        $('#form1').bind('submit', function () {
            return isValidated;
        });
        </script>
    }
}
